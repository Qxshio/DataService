{"searchDocs":[{"title":"DataUtil","type":0,"sectionRef":"#","url":"/DataService/api/DataUtil","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"DataUtil","url":"/DataService/api/DataUtil#functions","content":" ","version":null,"tagName":"h2"},{"title":"getDataStringPath​","type":1,"pageTitle":"DataUtil","url":"/DataService/api/DataUtil#getDataStringPath","content":"&lt;/&gt; DataUtil:getDataStringPath( Player: Player -- The player whose data string path you want to retrieve ) → string-- The string path pointing to the player's data in the profile system Retrieves the string path to the data section of the given player's profile for replication purposes. Example: print(getDataStringPath(Player)) -&gt; &quot;_profiles.414941613.Data&quot;  ","version":null,"tagName":"h3"},{"title":"DataServiceClient","type":0,"sectionRef":"#","url":"/DataService/api/DataServiceClient","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"DataServiceClient","url":"/DataService/api/DataServiceClient#functions","content":" ","version":null,"tagName":"h2"},{"title":"init​","type":1,"pageTitle":"DataServiceClient","url":"/DataService/api/DataServiceClient#init","content":"&lt;/&gt; DataServiceClient:init() → nil Initializes the DataServiceClient by creating a new Relay client instance.  ","version":null,"tagName":"h3"},{"title":"getDataChangedSignal​","type":1,"pageTitle":"DataServiceClient","url":"/DataService/api/DataServiceClient#getDataChangedSignal","content":"&lt;/&gt; DataServiceClient:getDataChangedSignal( stringPath: string-- The string path representing the location of the data to watch for changes ) → Signal-- A signal that fires when the specified data changes Returns a signal that fires when the data at the specified string path changes.  ","version":null,"tagName":"h3"},{"title":"SyncData​","type":1,"pageTitle":"DataServiceClient","url":"/DataService/api/DataServiceClient#SyncData","content":"&lt;/&gt; DataServiceClient:SyncData( Data: {}-- The new data to sync with the client's profile ) → nil Synchronizes the client's local profile data with new data from the server. ⚠️ This function should NOT be used as it is called automatically when the player joins.  ","version":null,"tagName":"h3"},{"title":"postDataAsync​","type":1,"pageTitle":"DataServiceClient","url":"/DataService/api/DataServiceClient#postDataAsync","content":"&lt;/&gt; DataServiceClient:postDataAsync( stringPath: string,-- The string path representing the location where the data should be posted value: any?-- The value to post to the specified path; can be nil ) → nil Sets server data asynchronously to the given string path.  ","version":null,"tagName":"h3"},{"title":"fetch​","type":1,"pageTitle":"DataServiceClient","url":"/DataService/api/DataServiceClient#fetch","content":"&lt;/&gt; DataServiceClient:fetch( stringPath: string,-- The string path representing the location of the data to fetch awaitSync: boolean?-- Whether or not the function should yield until the data is loaded ) → any?-- The data retrieved from the specified path Fetches data asynchronously from the given string path from the server. ","version":null,"tagName":"h3"},{"title":"DataService","type":0,"sectionRef":"#","url":"/DataService/api/DataService","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"DataService","url":"/DataService/api/DataService#types","content":" ","version":null,"tagName":"h2"},{"title":"DataServiceOptions​","type":1,"pageTitle":"DataService","url":"/DataService/api/DataService#DataServiceOptions","content":"&lt;/&gt; type DataServiceOptions = { template: {[string]: any}, Whitelist: {any}?, enforceReferentialIntegrity: ((Player ) → ())?, useMock: boolean?, yieldFunctionsUntilLoaded: boolean? } The options to provide in the :init() function ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"DataService","url":"/DataService/api/DataService#functions","content":" ","version":null,"tagName":"h2"},{"title":"init​","type":1,"pageTitle":"DataService","url":"/DataService/api/DataService#init","content":"&lt;/&gt; DataService:init( options: DataServiceOptions-- The table of options that determines the behaviour of the service ) → () Initializes the service and sets up key prerequisites to use in later functions. Must be called from a server-script  ","version":null,"tagName":"h3"},{"title":"getData​","type":1,"pageTitle":"DataService","url":"/DataService/api/DataService#getData","content":"&lt;/&gt; DataService:getData( Player: Player? -- The player who's data you want to retrieve ) → {} Retrieves all data or a player's profile data if a player is provided. If player data hasn't loaded yet, function will yield until their data is loaded.  ","version":null,"tagName":"h3"},{"title":"fetch​","type":1,"pageTitle":"DataService","url":"/DataService/api/DataService#fetch","content":"&lt;/&gt; DataService:fetch( Player: Player ,-- The player whose data is being accessed stringPath: string-- The string path pointing to the desired data within the player's profile ) → any-- The value retrieved from the specified path in the player's data Fetches the value at the given string path from a player's data.  ","version":null,"tagName":"h3"},{"title":"awaitPlayerDataAsync​","type":1,"pageTitle":"DataService","url":"/DataService/api/DataService#awaitPlayerDataAsync","content":"&lt;/&gt; DataService:awaitPlayerDataAsync( Player: Player | {Player }-- The player whose data you are waiting for ) → ()-- Returns when the data is available Waits asynchronously until a player's data has been loaded.  ","version":null,"tagName":"h3"},{"title":"setData​","type":1,"pageTitle":"DataService","url":"/DataService/api/DataService#setData","content":"&lt;/&gt; DataService:setData( Player: Player | {Player },-- The player(s) who's data you want modify stringPath: string,-- The string path of the index you want to modify e.g. Settings.MaxVolume value: any-- The value you want to modify the index(s) with ) → () Sets the index to the given value for all the players provided Example: local Cash = DataService:fetch(Player, &quot;Cash&quot;) -- 250 DataService:setData(Player, &quot;Cash&quot;, Cash * 2) print(DataService:fetch(Player, &quot;Cash&quot;)) -- 500   ","version":null,"tagName":"h3"},{"title":"setAllData​","type":1,"pageTitle":"DataService","url":"/DataService/api/DataService#setAllData","content":"&lt;/&gt; DataService:setAllData( stringPath: string,-- The string path of the index you want to modify e.g. Settings.MaxVolume value: any-- The value you want to modify the index(s) with ) → () Sets the index to the given value for every player  ","version":null,"tagName":"h3"},{"title":"setAllDataExcept​","type":1,"pageTitle":"DataService","url":"/DataService/api/DataService#setAllDataExcept","content":"&lt;/&gt; DataService:setAllDataExcept( Player: Player | {Player },-- The player(s) who you want to exclude from the modification stringPath: string,-- The string path of the index you want to modify e.g. Settings.MaxVolume value: any-- The value you want to modify the index(s) with ) → () Sets the index to the given value for every player  ","version":null,"tagName":"h3"},{"title":"checkInit​","type":1,"pageTitle":"DataService","url":"/DataService/api/DataService#checkInit","content":"&lt;/&gt; DataService:checkInit() → boolean Returns true if the service has been initialized, otherwise false  ","version":null,"tagName":"h3"},{"title":"_enforceInit​","type":1,"pageTitle":"DataService","url":"/DataService/api/DataService#_enforceInit","content":"&lt;/&gt; DataService:_enforceInit() → () Asserts that the DataService has been initialized. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"DataService","url":"/DataService/api/DataService##","content":"Type\tDescriptionboot_error\tThrows if the service is not initialized  ","version":null,"tagName":"h3"},{"title":"_playerAdded​","type":1,"pageTitle":"DataService","url":"/DataService/api/DataService#_playerAdded","content":"&lt;/&gt; DataService:_playerAdded(Player: Player ) → () Attempts to load player data and replicates the retrieved data to the client. ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"DataService","url":"/DataService/api/DataService##","content":"Type\tDescriptionYou should not use this function as players are automatically detected and this function is called once the service is initialized\t  ","version":null,"tagName":"h3"},{"title":"_playerRemoving​","type":1,"pageTitle":"DataService","url":"/DataService/api/DataService#_playerRemoving","content":"&lt;/&gt; DataService:_playerRemoving(Player: Player ) → () Attempts to save player data ","version":null,"tagName":"h3"},{"title":"Errors","type":1,"pageTitle":"DataService","url":"/DataService/api/DataService##","content":"Type\tDescriptionYou should not use this function as players are automatically detected and this function is called once they leave\t ","version":null,"tagName":"h3"}],"options":{"id":"default"}}